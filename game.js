import { projet_quiz } from './script.js';

let currentQuestionIndex = -1; // Je pr√©pare l'index des questions, comme √ßa je pourrais faire +1 √† chaque changement de question
const landingPage = document.getElementById("landing-page");
const quizSection = document.getElementById("quiz-section");
const startButton = document.getElementById("start-button");
const question = document.getElementById("question-text");
const reponses = document.getElementById("options-container");
const suivant = document.getElementById("next-button");
const compteur = document.getElementsByClassName("compteur");

// J'ai cr√©√© des variables et je les ai li√©es aux √©l√©ments du HTML dont j'ai besoin (le bloc question, le bloc r√©ponses, le bouton suivant, le compteur)
// Show quiz only after clicking "Commencer"
startButton.addEventListener("click", () => {
  landingPage.style.display = "none";
  quizSection.style.display = "block";
  currentQuestionIndex = 0;
  loadQuestion();
});
function loadQuestion() { // Je cr√©e ma fonction qui va charger les questions 
reponses.innerHTML = " "; // Je vide la section r√©ponses pour √™tre s√ªr qu'il n'y a pas d√©j√† des boutons

const firstQuestion = projet_quiz.questions[currentQuestionIndex]; // Ici je vais chercher mes questions et mes r√©ponses dans mon fichier script.js

question.innerText = firstQuestion.text; // Je mets le texte de la question dans le bloc question

firstQuestion.options.forEach(option => {
    const option_btn = document.createElement('button');
    option_btn.innerText = option;
    option_btn.classList.add("option")
    reponses.appendChild(option_btn);

} ) // Je cr√©e une boucle pour chaque r√©ponse possible (4) : je cr√©e un bouton(createElement), je lui donne le texte de la r√©ponse(.innerText), je lui mets la classe "option" pour que le CSS s'applique (classList.add) et je la mets en enfant du bloc de r√©ponses dans le HTML (appendChild)

}

function selectAnswer(selectedBtn, correctAnswer) {
  const allButtons = reponses.querySelectorAll("button");
  allButtons.forEach(btn => btn.disabled = true);

  if (selectedBtn.innerText === correctAnswer) {
    selectedBtn.classList.add("correct");
    correctAnswersCount++;
    launchConfetti(); // üéâ Appel ici
  } else {
    selectedBtn.classList.add("wrong");
  }

  allButtons.forEach(btn => {
      if (btn.innerText === correctAnswer) {
        btn.classList.add("correct");
      }
    });
  

  compteurReponses.innerText = `Bonnes r√©ponses : ${correctAnswersCount}`;
  suivant.disabled = false;
}
suivant.addEventListener("click", () => {
  // V√©rifie s'il reste des questions
  if (currentQuestionIndex < projet_quiz.questions.length - 1) {
    currentQuestionIndex++;
    loadQuestion();
  } else {
    // Fin du quiz
    question.innerText = "üéâ Termin√© ! Bravo d'avoir compl√©t√© le quiz üé¨üéµ";
    reponses.innerHTML = ""; // j'efface les reponses 
    suivant.style.display = "none"; // je cache le button suivant

    // bouton "Rejouer"
    const replayButton = document.createElement("button");
    replayButton.innerText = "Rejouer";
    replayButton.classList.add("option"); // pour garder le m√™me style
    reponses.appendChild(replayButton);

    // Quand on clique sur Rejouer on r√©initialiser le quiz
    replayButton.addEventListener("click", () => {
      currentQuestionIndex = 0; // revenir √† la premi√®re question
      suivant.style.display = "inline-block"; // reafficher le button suivant
      reponses.innerHTML = ""; // revenir a 0
      loadQuestion(); // relancer le quiz
    });
  }
});


// Je cr√©e un √©couteur d'√©v√©nement sur mon bouton suivant (addEventListener)
